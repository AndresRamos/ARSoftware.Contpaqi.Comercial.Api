// <auto-generated />
using System;
using Api.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230225124703_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Core.Domain.Common.ApiRequestBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaRfc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Requests", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("ApiRequestBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Api.Core.Domain.Common.ApiResponseBase", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Responses", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("ApiResponseBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarAgenteRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("ActualizarAgenteRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarAlmacenRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("ActualizarAlmacenRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarClienteRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("ActualizarClienteRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarDocumentoRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("ActualizarDocumentoRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarProductoRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("ActualizarProductoRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarAgentesRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("BuscarAgentesRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarAlmacenesRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("BuscarAlmacenesRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarClientesRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("BuscarClientesRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarConceptosRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("BuscarConceptosRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarProductosRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("BuscarProductosRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CancelarDocumentoRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("CancelarDocumentoRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearAgenteRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("CrearAgenteRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearAlmacenRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("CrearAlmacenRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearClienteRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("CrearClienteRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearDocumentoDigitalRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("CrearDocumentoDigitalRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearDocumentoRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("CrearDocumentoRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearProductoRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("CrearProductoRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.EliminarClienteRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("EliminarClienteRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.EliminarDocumentoRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("EliminarDocumentoRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.EliminarProductoRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("EliminarProductoRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.Empresas.BuscarEmpresasRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("BuscarEmpresasRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.SaldarDocumentoRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("SaldarDocumentoRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.TimbrarDocumentoRequest", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiRequestBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.Property<string>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Options");

                    b.HasDiscriminator().HasValue("TimbrarDocumentoRequest");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarAgenteResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("ActualizarAgenteResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarAlmacenResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("ActualizarAlmacenResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarClienteResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("ActualizarClienteResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarDocumentoResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("ActualizarDocumentoResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.ActualizarProductoResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("ActualizarProductoResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarAgentesResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("BuscarAgentesResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarAlmacenesResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("BuscarAlmacenesResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarClientesResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("BuscarClientesResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarConceptosResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("BuscarConceptosResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.BuscarProductosResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("BuscarProductosResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CancelarDocumentoResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("CancelarDocumentoResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearAgenteResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("CrearAgenteResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearAlmacenResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("CrearAlmacenResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearClienteResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("CrearClienteResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearDocumentoDigitalResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("CrearDocumentoDigitalResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearDocumentoResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("CrearDocumentoResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.CrearProductoResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("CrearProductoResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.EliminarClienteResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("EliminarClienteResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.EliminarDocumentoResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("EliminarDocumentoResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.EliminarProductoResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("EliminarProductoResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.Empresas.BuscarEmpresasResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("BuscarEmpresasResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.SaldarDocumentoResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("SaldarDocumentoResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Requests.TimbrarDocumentoResponse", b =>
                {
                    b.HasBaseType("Api.Core.Domain.Common.ApiResponseBase");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasDiscriminator().HasValue("TimbrarDocumentoResponse");
                });

            modelBuilder.Entity("Api.Core.Domain.Common.ApiResponseBase", b =>
                {
                    b.HasOne("Api.Core.Domain.Common.ApiRequestBase", null)
                        .WithOne("Response")
                        .HasForeignKey("Api.Core.Domain.Common.ApiResponseBase", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.Core.Domain.Common.ApiRequestBase", b =>
                {
                    b.Navigation("Response");
                });
#pragma warning restore 612, 618
        }
    }
}
